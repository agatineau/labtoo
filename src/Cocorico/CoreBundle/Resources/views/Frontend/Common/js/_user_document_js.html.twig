{#Jquery files uploads and sortable management#}

{% javascripts
'js/vendor/jqfileupload/tmpl.min.js'
'js/vendor/jqfileupload/load-image.all.min.js'
'js/vendor/jqfileupload/canvas-to-blob.min.js'
'js/vendor/jqfileupload/jquery.iframe-transport.js'
'js/vendor/jqfileupload/jquery.fileupload.js'
'js/vendor/jqfileupload/jquery.fileupload-process.js'
'js/vendor/jqfileupload/jquery.fileupload-image.js'
'js/vendor/jqfileupload/jquery.fileupload-validate.js'

filter="?jsqueeze" output='js/compiled/upload.js' %}
<script src="{{ asset_url }}"></script>
{% endjavascripts %}

<script>
    $(function () {
        'use strict';
        var $uploadElt = $("{{ upload_elt }}"),
                $form = $uploadElt.closest("form"),
                $images = $("{{ upload_images }}"), //Hidden field to memorize uploaded file
                fileId = 0, //Id of files in the list. Used to order
                $holder = $("#documents-container");
        if ($uploadElt.length && $form.length) {
            $uploadElt.fileupload({
                url: '{{ upload_url }}',
                dataType: 'json',
                autoUpload: false,
                acceptFileTypes: /(\.|\/)(pdf|jpe?g|png?g)$/i,
                maxFileSize: {{ user_img_max_upload_size }}000000, // MB
                maxNumberOfFiles: {{ upload_max }},
                // Enable image resizing, except for Android and Opera
                disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator.userAgent),
                previewMaxWidth: {{ upload_image_w }},
                previewMaxHeight: {{ upload_image_h }},
                previewCrop: true,
                dropZone: $("#drop-zone")
            }).on('fileuploadadd', function (e, data) {//Images added
                uploadAdd(data);
            }).on('fileuploadprocessalways', function (e, data) {
                uploadAlways(data);
            }).on('fileuploadprogressall', function (e, data) {
                uploadProgress(data);
            }).on('fileuploaddone', function (e, data) {//Image uploaded
                uploadDone(data);
            }).on('fileuploadfail', function (e, data) {
                uploadFail(data);
            }).on('fileuploadstop', function (e) {
            }).on('fileuploadsend', function (e, data) {
            }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

        }


        function uploadDone(data) {
            //@todo: handle upload error
            //debugger;
            $.each(data.result.files, function (index, file) {
                if (file.error) {
                    var error = $('<span class="error"/>').text(file.error);
                }
            });
        }

        function uploadProgress(data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress-bar').css(
                    'width',
                    progress + '%'
            );
        }

        function uploadAlways(data) {
            if (data.context) {
                var index = data.index,
                        file = data.files[index],
                        node = $(data.context.children()[index]);
                if (file.preview) {
                    node.prepend(file.preview);
                }
                if (file.error) {
                    node.append('<br>').append($('<span class="error"/>').text(file.error));
                }
            }

            jQuery('.about-info').sameHeight({
                elements: '.column',
                flexible: true,
                multiLine: true
            });
        }

        function uploadFail(data) {
            $.each(data.files, function (index) {
                if (data.context) {
                    var error = $('<span class="error"/>').text('File upload failed.');
                    $(data.context.children()[index])
                            .append('<br>')
                            .append(error);
                }
            });
        }

        function uploadAdd(data) {
           //console.log({{ upload_max }} - $holder.find(".files-list .img-thumbnail").length);
            //console.log(data.files.length);

            var maxFiles = {{ upload_max }} - $holder.find(".files-list .img-thumbnail").length;
            if (data.files.length > maxFiles || fileId >= maxFiles) {
                var error = '<div class="errors"><i class="icon-error-field"></i>' +
                        '{{ "user_images.max {{ max_images }}"|trans({"{{ max_images }}": user_img_max}, 'cocorico_user') }}' +
                        '<br></div></div>';
                //debugger;
                $(".document-images-error").prepend(error);
                return false;
            }

            data.context = $('<div class="custom-document-list hide-canvas" data-id="' + fileId + '"/>').appendTo("#user-document-uploaded-list");
            fileId++;

            $.each(data.files, function (index, file) {
                // var node = $('<div />');
                // var nodeText =  $('<div> ' + file.name + '<div />');
                // var cancelLink = $('<a href="#" class="" data-dismiss="alert" aria-label="Close">' + '<i class="icon-cancel"></i>' + '</a>');
                //
                // cancelLink.appendTo(nodeText);
                // nodeText.appendTo(node);
                //
                // console.log(data.context);

                var node = $("<div>");
                node.append(file.name +
                    '<a href="#" class=" ml-3 custom-remove-btn remove cancel-upload" data-dismiss="alert" aria-label="Close">' + '<i class="icon-cancel"></i>' + '</a>' +
                    '');
                node.appendTo(data.context);

                //cancelLink.appendTo(node);

                //Add files to upload when form is submitted
                filesToUpload.documents.push(file);
            });

            $(".cancel-upload").click(function (e) {
                $(this).parent().remove();
                fileId--;
            });
        }

    });

</script>